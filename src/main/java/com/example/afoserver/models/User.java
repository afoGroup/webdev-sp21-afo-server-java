package com.example.afoserver.models;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

/**
 * A user object contains information about the AFO user's
 * username, password and usertype.
 */

@Entity
@Table(name = "users")
public class User {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;         // database id autogenerated
    private String username; // username set by user
    private String password; // password set by user
    private String usertype; // otaku or weeb
    private String email;
    private String twitter;
    private String instagram;
    private String pictureURL;
    @Column(columnDefinition = "TEXT")
    private String bio;
    @OneToMany (
            mappedBy = "users",
            cascade = CascadeType.ALL,
            orphanRemoval = true
    )
    private List<UserGroup> groups = new ArrayList<>();

    /**
     * Default constructor for user.
     */
    public User() { }

    /**
     * Constructor for user that takes in username, password, and usertype.
     */
    public User(String username, String password, String usertype) {
        this.username = username;
        this.password = password;
        this.usertype = usertype;
    }

    /**
     * Get the id of this object.
     * @return id a Long.
     */
    public Long getId() {
        return id;
    }

    /**
     * Get the usertype of this object.
     * @return usertype a String.
     */
    public String getUsertype() {
        return usertype;
    }

    /**
     * Set the usertype of this object
     * @param usertype a String.
     */
    public void setUsertype(String usertype) {
        this.usertype = usertype;
    }

    /**
     * Get the username of this object
     * @return username a String.
     */
    public String getUsername() {
        return username;
    }

    /**
     * Set the username of this object
     * @param username a String.
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Get the username of this object
     * @return password a String.
     */
    public String getPassword() {
        return password;
    }

    /**
     * Set the password of this object
     * @param password a String.
     */
    public void setPassword(String password) {
        this.password = password;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getTwitter() {
        return twitter;
    }

    public void setTwitter(String twitter) {
        this.twitter = twitter;
    }

    public String getInstagram() {
        return instagram;
    }

    public void setInstagram(String instagram) {
        this.instagram = instagram;
    }

    public String getPictureURL() {
        return pictureURL;
    }

    public void setPictureURL(String pictureURL) {
        this.pictureURL = pictureURL;
    }

    public String getBio() {
        return bio;
    }

    public void setBio(String bio) {
        this.bio = bio;
    }

    public void createGroup(Group group) {
        UserGroup userGroup = new UserGroup(group, this);
        userGroup.setUserIsOwner(Boolean.TRUE);
        groups.add(userGroup);
        group.getUsers().add(userGroup);
    }

    public void addGroup(Group group) {
        UserGroup userGroup = new UserGroup(group, this);
        groups.add(userGroup);
        group.getUsers().add(userGroup);
    }

    public void removeGroup(Group group) {
        for (Iterator<UserGroup> iterator = groups.iterator();
             iterator.hasNext();) {
            UserGroup userGroup = iterator.next();

            if (userGroup.getGroup().equals(group) &&
                    userGroup.getUser().equals(this)) {
                iterator.remove();
                userGroup.getGroup().getUsers().remove(userGroup);
                userGroup.setGroup(null);
                userGroup.setUser(null);
            }
        }
    }



}
